name: Deploy Templatized Data Environment

on:
  pull_request:
    types: [closed]
    branches:
      - staging
      - main
  push:
    branches:
      - staging
      - main

jobs:
  deploy_data_environment:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest

    env:
      SNOWFLAKE_CONNECTIONS_ADVANCED_DATA_ENGINEERING_SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_CONNECTIONS_ADVANCED_DATA_ENGINEERING_SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_CONNECTIONS_ADVANCED_DATA_ENGINEERING_SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment
        id: set_env
        run: |
          TARGET_BRANCH="${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}"
          if [[ $TARGET_BRANCH == "staging" ]]; then
            echo "DEPLOY_ENV=staging" >> $GITHUB_ENV
          elif [[ $TARGET_BRANCH == "main" ]]; then
            echo "DEPLOY_ENV=prod" >> $GITHUB_ENV
          else
            echo "Unexpected branch: $TARGET_BRANCH"
            exit 1
          fi

      - name: Install SnowflakeCLI
        uses: snowflakedb/snowflake-cli-action@v1.5
        with:
          cli-version: "latest"
          default-config-file-path: "config.toml"

      - name: Fetch latest changes to Snowflake
        run: snow git fetch course_repo.public.advanced_data_engineering_snowflake

      - name: Deploy templates to data environment
        run: |
          for project in module-1/*; do
            if [ -d "$project" ]; then
              echo "Deploying project: $project"
              snow git execute $project/pipeline/data/ \
              -D "env='${{ env.DEPLOY_ENV }}'" \
              --database=COURSE_REPO \
              --schema=PUBLIC
            fi
          done
